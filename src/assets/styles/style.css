/* имя-блока__имя-элемента_имя-модификатора_значение-модификатора */
/* имена одинаковых блоков всегда совпадают, переиспользование наше все */
/* основные стили для текста:
 - цвет
  - font-size
  - margin 
  - font-family
  - line-hight - интервал между строками
  - font-weight
*/
/* псевдоклассы:
:link - псевдокласс для ссылок по которым пользователь еще не перешел
:visited - для ссылок по которым уже переходили
:hover - стиль элемента, когда на него наведен курсор
:active - стиль элемента в момент клика на него
:focus - стиль элемента в момент фокусировки на нем
:not() - стилизует элементы, которые не содержат селектор указанный в скобках
*/
/* псевдоэлементы:
::after - используется вместе со свойством content и позволяет вывести необходимые данные после содержимого элемента. пр.: .block::after {content: ':)'}
::before - тот же смысл, но добавляет до элемента
::selection - псевдоэлемент позволяет установить цвет и фон текста который выделен пользователем
*/
/*  
значение inherit - для наследования значения свойства у своего родителя. пр. border: inherit;
*/
/* 
Шрифты
при указании font-family если в названии шрифта есть пробелы, то название нужно заключать в кавычки
информацио о поддержке шрифта в определенном браузере можно найти на https://caniuse.com/
шрифт можно подключить свой, он будет загружаться на компьютер пользователя вместе с сайтом. для этого указывается css @-правило @font-face
google fonts:
- выбери нужный шрифт, нажми кнопку quick-use -> выбери начертание (выбирай только те, которые будешь использовать, каждое начертание увеличивает скорость загрузки сайта)
- выбери алфавит (аналогично для скорости выбираем только нужный)
- выбери стиль шрифта
- добавь код на сайт через директиву @import (готовый код для этого есть во второй вкладке на странице google шрифта.) ex.: @import url('http://....')

Размер шрифта: 
px - просто высота шрифта
% - указанные в процентах значения берутся от базового размера шрифта определенного тэга или просто от значения, которое браузер устанавливает по умолчанию
em - тот же принцип, что и с процентами: 1em = 100%

Стиль шрифта:
font-weight:
bold, normal, inherit 
bolder, lighter - более/менее жирный шрифт, чем у родителя

font-style: 
italic, oblique(наклонный), normal, inherit
*/
/* 
Цвета (градиент?)
https://color.adobe.com/ru/create/color-wheel - здесь можно создать цвет, и у него будет нужная кодировка
rgba: a - прозрачность в диапазоне 0 - 1 (0.5 или .5 например)
*/
/* 
Текст
text-transform - изменяет регистр букв
uppercase, lowercase, capitalize, none, inherit

text-decoration:
underline(нижнее), overline (верхнее подчеркивание), line-through (зачеркнутое), blink (мигание), inherit, none

text-shadow:
1px, 2px, 3px, #ccc: 1 - смещение тени вправо(+)-влево(-), 2 - вверх(-) - вниз(+) 3 - радиус размытия - (0 - четкая), последнее - цвет тени. по умолчанию - цвет текста
может быть несколько теней, значения перечисляются через запятую

в любых единицах измерения: px, pt, em
межсимвольный интервал letter-spacing 
интервал между словами word-spacing
межстрочный интервал line-height

text-align - выравнивание текста

Стиль для списков:
маркер-точка - disc
окружность - circle
квадрат - square
арабские цифры - decimal
прописная/строчная латиница - upper/lower-latin
inherit
none
больше значений здесь: https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type

list-style-image: url('')
list-style-position
(outside/inside)

list-style: upper-latin inside;
*/

/*
 Блоки

 схлапывание margin-top/bottom - это когда два отступа накладываются друг на друга. при этом выбирается большее значение из двух пересекающихся. то есть допустим:
 у одного блока нижний маргин - 60 px, а у второго верхний - 30px. было бы логично если бы отступ между ними стал 90px. но он будет  60px.

 если указать у блока значение height: 200px; overflow: auto; то если высота содержимого элемента будет превышать указанную, браузер добавит к элементу полосу прокрутки


 box-sizing:

 чтобы это свойство работало во многих браузерах нужно указать:
 -moz-box-sizing: border-box;
-webkit-box-sizing: border-box;
box-sizing: border-box;

св-во overflow позволяет скрыть необходимую часть, например сделать из квадратной картинки круглую: width: 300px; height: 300px; overflow: hidden; border-radius: 50%;

*/